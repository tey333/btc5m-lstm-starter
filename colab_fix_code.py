# üîß ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Auto-tuning ‡πÉ‡∏ô Colab

import pandas as pd
import glob
import os

def read_metrics_safely():
    """‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå metrics ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢"""
    
    # ‡∏•‡∏¥‡∏™‡∏ï‡πå‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ profit_factor
    preferred_files = [
        'latest_metrics.csv',
        'trading_metrics_complete_*_windows.csv', 
        'windows_summary.csv',
        'metrics_summary.csv',
        'trading_results.csv'
    ]

    for pattern in preferred_files:
        if '*' in pattern:
            files = glob.glob(f'outputs/metrics/{pattern}')
            if files:
                test_file = sorted(files)[-1]
            else:
                continue
        else:
            test_file = f'outputs/metrics/{pattern}'
            if not os.path.exists(test_file):
                continue
        
        try:
            df = pd.read_csv(test_file)
            if 'profit_factor' in df.columns:
                print(f"‚úÖ ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå: {test_file}")
                print(f"üìä Columns: {list(df.columns)}")
                return df
        except Exception as e:
            print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô {test_file}: {e}")
            continue

    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå metrics ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°!")
    return None

# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå
df = read_metrics_safely()
if df is not None:
    print(f"üéâ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô rows: {len(df)}")
    print(f"üìà ‡∏°‡∏µ profit_factor: {'profit_factor' in df.columns}")
else:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ")
